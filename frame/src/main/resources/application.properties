#端口
server.port=8081

#项目根路径 
server.servlet.context-path=/frame

#数据库配置
mysql.datasource.frame.driverClassName = com.mysql.jdbc.Driver
mysql.datasource.frame.url = jdbc:mysql://localhost:3306/test?serverTimezone=UTC&allowMultiQueries=true&useSSL=false
mysql.datasource.frame.username = root
mysql.datasource.frame.password = 123456

#配置最大连接
mysql.datasource.frame.maxActive = 22
#配置初始连接
mysql.datasource.frame.initialSize = 1
#配置最小连接
mysql.datasource.frame.minIdle = 1
#连接等待超时时间
mysql.datasource.frame.maxWait = 60000
#间隔多久进行检测,关闭空闲连接
mysql.datasource.frame.timeBetweenEvictionRunsMillis = 60000
#一个连接最小生存时间
mysql.datasource.frame.minEvictableIdleTimeMillis = 300000
#连接等待超时时间 单位为毫秒 缺省启用公平锁
#并发效率会有所下降， 如果需要可以通过配置useUnfairLock属性为true使用非公平锁
mysql.datasource.frame.useUnfairLock = true
#用来检测是否有效的sql
mysql.datasource.frame.validationQuery = select 1
#申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
mysql.datasource.frame.testOnBorrow = false
#归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
mysql.datasource.frame.testOnReturn = false
#打开PSCache,并指定每个连接的PSCache大小启用poolPreparedStatements后，
#PreparedStatements 和CallableStatements 都会被缓存起来复用，
#即相同逻辑的SQL可以复用一个游标，这样可以减少创建游标的数量。
mysql.datasource.frame.poolPreparedStatements = true
mysql.datasource.frame.maxOpenPreparedStatements = 20
#配置sql监控的filter
mysql.datasource.frame.filters = stat,wall